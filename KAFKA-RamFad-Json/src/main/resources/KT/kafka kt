
1. String code properties

#Consumer Properties:
#-------------------------------
#spring.kafka.consumer.bootstrap-servers: Specifies the Kafka broker address.
#spring.kafka.consumer.group-id: Defines the consumer group ID.
#spring.kafka.consumer.auto-offset-reset: Sets the offset reset policy. "earliest" means starting from the beginning of the topic.
#spring.kafka.consumer.key-deserializer: Deserializer for the key.
#spring.kafka.consumer.value-deserializer: Deserializer for the value.

#Producer Properties:
#------------------------------
#spring.kafka.producer.bootstrap-servers: Specifies the Kafka broker address.
#spring.kafka.producer.key-serializer: Serializer for the key.
#spring.kafka.producer.value-serializer: Serializer for the value.


#------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2. Json code properties


spring.kafka.consumer.bootstrap-servers=localhost:9092:
Ans:
This property sets the Kafka broker address that the consumer will connect to. localhost:9092 indicates that the Kafka broker is running on the local machine on port 9092.

spring.kafka.consumer.group-id=myGroup:
Ans:
This sets the consumer group ID for this consumer. All consumers with the same group ID share the load of consuming messages from topics.

spring.kafka.consumer.auto-offset-reset=earliest:
Ans:
This property determines what to do when there is no initial offset in Kafka or if the current offset does not exist anymore on the server. earliest means that the consumer will start reading from the beginning of the topic.

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer:
Ans:
This specifies the class that will deserialize the key of the Kafka message. Here, StringDeserializer is used to convert the key from bytes to a String.

spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer:
Ans:
This specifies the class that will deserialize the value of the Kafka message. JsonDeserializer is used to convert the message value from JSON format to a Java object.
spring.kafka.consumer.properties.spring.json.trusted.packages=*:

This property tells the JsonDeserializer which packages are trusted for deserialization.
 Using * means all packages are trusted, which can be a security risk. It's better to specify only the packages you trust.
 
 
 
 
 
 